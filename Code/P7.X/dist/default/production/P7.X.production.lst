

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Feb 16 00:05:27 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  0002A4                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _numbers
    62  0002A4  3F                 	db	63
    63  0002A5  06                 	db	6
    64  0002A6  5B                 	db	91
    65  0002A7  4F                 	db	79
    66  0002A8  66                 	db	102
    67  0002A9  6D                 	db	109
    68  0002AA  7D                 	db	125
    69  0002AB  07                 	db	7
    70  0002AC  7F                 	db	127
    71  0002AD  6F                 	db	111
    72  0002AE  77                 	db	119
    73  0002AF  7C                 	db	124
    74  0002B0  39                 	db	57
    75  0002B1  5E                 	db	94
    76  0002B2  79                 	db	121
    77  0002B3  71                 	db	113
    78                           
    79                           ;initializer for _dispToggle
    80  0002B4  01                 	db	1
    81  0000                     _INTCONbits	set	4082
    82  0000                     _TMR0L	set	4054
    83  0000                     _TMR0H	set	4055
    84  0000                     _T0CONbits	set	4053
    85  0000                     _PORTEbits	set	3972
    86  0000                     _PORTAbits	set	3968
    87  0000                     _TRISE	set	3990
    88  0000                     _TRISD	set	3989
    89  0000                     _TRISA	set	3986
    90  0000                     _LATD	set	3980
    91  0000                     _PORTD	set	3971
    92  0000                     _ADCON1	set	4033
    93  0000                     _LATAbits	set	3977
    94  0000                     _LATEbits	set	3981
    95                           
    96                           ; #config settings
    97                           
    98                           	psect	cinit
    99  00026A                     __pcinit:
   100                           	callstack 0
   101  00026A                     start_initialization:
   102                           	callstack 0
   103  00026A                     __initialization:
   104                           	callstack 0
   105                           
   106                           ; Initialize objects allocated to COMRAM (17 bytes)
   107                           ; load TBLPTR registers with __pidataCOMRAM
   108  00026A  0EA4               	movlw	low __pidataCOMRAM
   109  00026C  6EF6               	movwf	tblptrl,c
   110  00026E  0E02               	movlw	high __pidataCOMRAM
   111  000270  6EF7               	movwf	tblptrh,c
   112  000272  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   113  000274  6EF8               	movwf	tblptru,c
   114  000276  EE00  F001         	lfsr	0,__pdataCOMRAM
   115  00027A  EE10 F011          	lfsr	1,17
   116  00027E                     copy_data0:
   117  00027E  0009               	tblrd		*+
   118  000280  CFF5 FFEE          	movff	tablat,postinc0
   119  000284  50E5               	movf	postdec1,w,c
   120  000286  50E1               	movf	fsr1l,w,c
   121  000288  E1FA               	bnz	copy_data0
   122                           
   123                           ; Clear objects allocated to COMRAM (11 bytes)
   124  00028A  EE00  F012         	lfsr	0,__pbssCOMRAM
   125  00028E  0E0B               	movlw	11
   126  000290                     clear_0:
   127  000290  6AEE               	clrf	postinc0,c
   128  000292  06E8               	decf	wreg,f,c
   129  000294  E1FD               	bnz	clear_0
   130  000296                     end_of_initialization:
   131                           	callstack 0
   132  000296                     __end_of__initialization:
   133                           	callstack 0
   134  000296  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   135  000298  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   136  00029A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   137  00029C  6EF8               	movwf	tblptru,c
   138  00029E  0100               	movlb	0
   139  0002A0  EF90  F000         	goto	_main	;jump to C main() function
   140                           
   141                           	psect	bssCOMRAM
   142  000012                     __pbssCOMRAM:
   143                           	callstack 0
   144  000012                     _toggleCounter:
   145                           	callstack 0
   146  000012                     	ds	2
   147  000014                     _tmrCounter3:
   148                           	callstack 0
   149  000014                     	ds	2
   150  000016                     _tmrCounter2:
   151                           	callstack 0
   152  000016                     	ds	2
   153  000018                     _tmrCounter1:
   154                           	callstack 0
   155  000018                     	ds	2
   156  00001A                     _minCounter:
   157                           	callstack 0
   158  00001A                     	ds	1
   159  00001B                     _decCounter:
   160                           	callstack 0
   161  00001B                     	ds	1
   162  00001C                     _unitCounter:
   163                           	callstack 0
   164  00001C                     	ds	1
   165                           
   166                           	psect	dataCOMRAM
   167  000001                     __pdataCOMRAM:
   168                           	callstack 0
   169  000001                     _numbers:
   170                           	callstack 0
   171  000001                     	ds	16
   172  000011                     _dispToggle:
   173                           	callstack 0
   174  000011                     	ds	1
   175                           
   176                           	psect	cstackCOMRAM
   177  00001D                     __pcstackCOMRAM:
   178                           	callstack 0
   179  00001D                     ??_setDisplay:
   180  00001D                     
   181                           ; 1 bytes @ 0x0
   182  00001D                     	ds	2
   183  00001F                     setDisplay@dispNum:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x2
   187  00001F                     	ds	1
   188  000020                     
   189                           ; 1 bytes @ 0x3
   190 ;;
   191 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   192 ;;
   193 ;; *************** function _main *****************
   194 ;; Defined at:
   195 ;;		line 163 in file "main.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   209 ;;      Params:         0       0       0       0       0       0       0       0       0
   210 ;;      Locals:         0       0       0       0       0       0       0       0       0
   211 ;;      Temps:          0       0       0       0       0       0       0       0       0
   212 ;;      Totals:         0       0       0       0       0       0       0       0       0
   213 ;;Total ram usage:        0 bytes
   214 ;; Hardware stack levels required when called: 3
   215 ;; This function calls:
   216 ;;		_setup
   217 ;; This function is called by:
   218 ;;		Startup code after reset
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           	psect	text0
   223  000120                     __ptext0:
   224                           	callstack 0
   225  000120                     _main:
   226                           	callstack 28
   227  000120                     
   228                           ;main.c: 164:  setup();
   229  000120  EC14  F001         	call	_setup	;wreg free
   230  000124                     l856:
   231                           
   232                           ;main.c: 166:         if(dispToggle == 1){
   233  000124  0411               	decf	_dispToggle^0,w,c
   234  000126  A4D8               	btfss	status,2,c
   235  000128  EF98  F000         	goto	u101
   236  00012C  EF9A  F000         	goto	u100
   237  000130                     u101:
   238  000130  EFA4  F000         	goto	l860
   239  000134                     u100:
   240  000134                     
   241                           ;main.c: 167:             LATD = numbers[unitCounter];
   242  000134  0E01               	movlw	low _numbers
   243  000136  241C               	addwf	_unitCounter^0,w,c
   244  000138  6ED9               	movwf	fsr2l,c
   245  00013A  6ADA               	clrf	fsr2h,c
   246  00013C  0E00               	movlw	high _numbers
   247  00013E  22DA               	addwfc	fsr2h,f,c
   248  000140  50DF               	movf	indf2,w,c
   249  000142  6E8C               	movwf	140,c	;volatile
   250                           
   251                           ;main.c: 168:         }else if(dispToggle == 2){
   252  000144  EF92  F000         	goto	l856
   253  000148                     l860:
   254  000148  0E02               	movlw	2
   255  00014A  1811               	xorwf	_dispToggle^0,w,c
   256  00014C  A4D8               	btfss	status,2,c
   257  00014E  EFAB  F000         	goto	u111
   258  000152  EFAD  F000         	goto	u110
   259  000156                     u111:
   260  000156  EFB1  F000         	goto	l864
   261  00015A                     u110:
   262  00015A                     
   263                           ;main.c: 169:             LATD = numbers[0];
   264  00015A  C001  FF8C         	movff	_numbers,3980	;volatile
   265                           
   266                           ;main.c: 170:         }else if(dispToggle == 3){
   267  00015E  EF92  F000         	goto	l856
   268  000162                     l864:
   269  000162  0E03               	movlw	3
   270  000164  1811               	xorwf	_dispToggle^0,w,c
   271  000166  A4D8               	btfss	status,2,c
   272  000168  EFB8  F000         	goto	u121
   273  00016C  EFBA  F000         	goto	u120
   274  000170                     u121:
   275  000170  EFC4  F000         	goto	l868
   276  000174                     u120:
   277  000174                     
   278                           ;main.c: 171:             LATD = numbers[minCounter];
   279  000174  0E01               	movlw	low _numbers
   280  000176  241A               	addwf	_minCounter^0,w,c
   281  000178  6ED9               	movwf	fsr2l,c
   282  00017A  6ADA               	clrf	fsr2h,c
   283  00017C  0E00               	movlw	high _numbers
   284  00017E  22DA               	addwfc	fsr2h,f,c
   285  000180  50DF               	movf	indf2,w,c
   286  000182  6E8C               	movwf	140,c	;volatile
   287                           
   288                           ;main.c: 172:         }else if(dispToggle == 4){
   289  000184  EF92  F000         	goto	l856
   290  000188                     l868:
   291  000188  0E04               	movlw	4
   292  00018A  1811               	xorwf	_dispToggle^0,w,c
   293  00018C  A4D8               	btfss	status,2,c
   294  00018E  EFCB  F000         	goto	u131
   295  000192  EFCD  F000         	goto	u130
   296  000196                     u131:
   297  000196  EFD7  F000         	goto	l80
   298  00019A                     u130:
   299  00019A                     
   300                           ;main.c: 173:             LATD = numbers[decCounter];
   301  00019A  0E01               	movlw	low _numbers
   302  00019C  241B               	addwf	_decCounter^0,w,c
   303  00019E  6ED9               	movwf	fsr2l,c
   304  0001A0  6ADA               	clrf	fsr2h,c
   305  0001A2  0E00               	movlw	high _numbers
   306  0001A4  22DA               	addwfc	fsr2h,f,c
   307  0001A6  50DF               	movf	indf2,w,c
   308  0001A8  6E8C               	movwf	140,c	;volatile
   309  0001AA  EF92  F000         	goto	l856
   310  0001AE                     l80:
   311  0001AE  EF92  F000         	goto	l856
   312  0001B2  EF07  F000         	goto	start
   313  0001B6                     __end_of_main:
   314                           	callstack 0
   315                           
   316 ;; *************** function _setup *****************
   317 ;; Defined at:
   318 ;;		line 77 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, status,2
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   332 ;;      Params:         0       0       0       0       0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0       0       0       0       0
   335 ;;      Totals:         0       0       0       0       0       0       0       0       0
   336 ;;Total ram usage:        0 bytes
   337 ;; Hardware stack levels used: 1
   338 ;; Hardware stack levels required when called: 2
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		_main
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           	psect	text1
   347  000228                     __ptext1:
   348                           	callstack 0
   349  000228                     _setup:
   350                           	callstack 28
   351  000228                     
   352                           ;main.c: 78:    ADCON1 = 0x0F;
   353  000228  0E0F               	movlw	15
   354  00022A  6EC1               	movwf	193,c	;volatile
   355                           
   356                           ;main.c: 80:  PORTD = 0x00;
   357  00022C  0E00               	movlw	0
   358  00022E  6E83               	movwf	131,c	;volatile
   359                           
   360                           ;main.c: 81:  LATD = 0x00;
   361  000230  0E00               	movlw	0
   362  000232  6E8C               	movwf	140,c	;volatile
   363                           
   364                           ;main.c: 83:  TRISA = 0x00;
   365  000234  0E00               	movlw	0
   366  000236  6E92               	movwf	146,c	;volatile
   367                           
   368                           ;main.c: 84:  TRISD = 0x00;
   369  000238  0E00               	movlw	0
   370  00023A  6E95               	movwf	149,c	;volatile
   371                           
   372                           ;main.c: 85:  TRISE = 0x00;
   373  00023C  0E00               	movlw	0
   374  00023E  6E96               	movwf	150,c	;volatile
   375  000240                     
   376                           ;main.c: 87:  PORTAbits.RA2 = 0;
   377  000240  9480               	bcf	128,2,c	;volatile
   378  000242                     
   379                           ;main.c: 88:  PORTAbits.RA5 = 0;
   380  000242  9A80               	bcf	128,5,c	;volatile
   381  000244                     
   382                           ;main.c: 89:  PORTEbits.RE0 = 0;
   383  000244  9084               	bcf	132,0,c	;volatile
   384  000246                     
   385                           ;main.c: 90:  PORTEbits.RE2 = 0;
   386  000246  9484               	bcf	132,2,c	;volatile
   387  000248                     
   388                           ;main.c: 92:  LATAbits.LA2 = 0;
   389  000248  9489               	bcf	137,2,c	;volatile
   390  00024A                     
   391                           ;main.c: 93:  LATAbits.LA5 = 0;
   392  00024A  9A89               	bcf	137,5,c	;volatile
   393  00024C                     
   394                           ;main.c: 94:  LATEbits.LE0 = 0;
   395  00024C  908D               	bcf	141,0,c	;volatile
   396  00024E                     
   397                           ;main.c: 95:  LATEbits.LE2 = 0;
   398  00024E  948D               	bcf	141,2,c	;volatile
   399  000250                     
   400                           ;main.c: 99:  T0CONbits.T0PS0 = 1;
   401  000250  80D5               	bsf	213,0,c	;volatile
   402  000252                     
   403                           ;main.c: 100:  T0CONbits.T0PS1 = 0;
   404  000252  92D5               	bcf	213,1,c	;volatile
   405  000254                     
   406                           ;main.c: 101:  T0CONbits.T0PS2 = 0;
   407  000254  94D5               	bcf	213,2,c	;volatile
   408  000256                     
   409                           ;main.c: 104:  T0CONbits.PSA = 0;
   410  000256  96D5               	bcf	213,3,c	;volatile
   411  000258                     
   412                           ;main.c: 107:  T0CONbits.T0CS = 0;
   413  000258  9AD5               	bcf	213,5,c	;volatile
   414  00025A                     
   415                           ;main.c: 110:  T0CONbits.T08BIT = 0;
   416  00025A  9CD5               	bcf	213,6,c	;volatile
   417  00025C                     
   418                           ;main.c: 113:  TMR0H = 0xFF;
   419  00025C  68D7               	setf	215,c	;volatile
   420                           
   421                           ;main.c: 114:  TMR0L = 0x05;
   422  00025E  0E05               	movlw	5
   423  000260  6ED6               	movwf	214,c	;volatile
   424  000262                     
   425                           ;main.c: 117:  INTCONbits.GIE = 1;
   426  000262  8EF2               	bsf	242,7,c	;volatile
   427  000264                     
   428                           ;main.c: 118:  INTCONbits.TMR0IE = 1;
   429  000264  8AF2               	bsf	242,5,c	;volatile
   430  000266                     
   431                           ;main.c: 119:  INTCONbits.TMR0IF = 0;
   432  000266  94F2               	bcf	242,2,c	;volatile
   433  000268  0012               	return		;funcret
   434  00026A                     __end_of_setup:
   435                           	callstack 0
   436                           
   437 ;; *************** function _intTimer *****************
   438 ;; Defined at:
   439 ;;		line 122 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   453 ;;      Params:         0       0       0       0       0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; Hardware stack levels required when called: 1
   460 ;; This function calls:
   461 ;;		_setDisplay
   462 ;; This function is called by:
   463 ;;		Interrupt level 2
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	intcode
   468  000008                     __pintcode:
   469                           	callstack 0
   470  000008                     _intTimer:
   471                           	callstack 28
   472                           
   473                           ;incstack = 0
   474  000008  8220               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   475  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   476                           
   477                           	psect	intcode_body
   478  000012                     __pintcode_body:
   479                           	callstack 28
   480  000012                     int_func:
   481                           	callstack 28
   482  000012  0006               	pop		; remove dummy address from shadow register refresh
   483  000014                     
   484                           ;main.c: 123:  if(INTCONbits.TMR0IF == 1){
   485  000014  A4F2               	btfss	242,2,c	;volatile
   486  000016  EF0F  F000         	goto	i2u1_41
   487  00001A  EF11  F000         	goto	i2u1_40
   488  00001E                     i2u1_41:
   489  00001E  EF8E  F000         	goto	i2l73
   490  000022                     i2u1_40:
   491  000022                     
   492                           ;main.c: 124:   INTCONbits.TMR0IF = 0;
   493  000022  94F2               	bcf	242,2,c	;volatile
   494  000024                     
   495                           ;main.c: 125:   ++tmrCounter1;
   496  000024  4A18               	infsnz	_tmrCounter1^0,f,c
   497  000026  2A19               	incf	(_tmrCounter1+1)^0,f,c
   498                           
   499                           ;main.c: 126:         ++tmrCounter2;
   500  000028  4A16               	infsnz	_tmrCounter2^0,f,c
   501  00002A  2A17               	incf	(_tmrCounter2+1)^0,f,c
   502                           
   503                           ;main.c: 127:         ++tmrCounter3;
   504  00002C  4A14               	infsnz	_tmrCounter3^0,f,c
   505  00002E  2A15               	incf	(_tmrCounter3+1)^0,f,c
   506                           
   507                           ;main.c: 128:         ++toggleCounter;
   508  000030  4A12               	infsnz	_toggleCounter^0,f,c
   509  000032  2A13               	incf	(_toggleCounter+1)^0,f,c
   510  000034                     
   511                           ;main.c: 129:         if(toggleCounter == 75){
   512  000034  0E4B               	movlw	75
   513  000036  1812               	xorwf	_toggleCounter^0,w,c
   514  000038  1013               	iorwf	(_toggleCounter+1)^0,w,c
   515  00003A  A4D8               	btfss	status,2,c
   516  00003C  EF22  F000         	goto	i2u2_41
   517  000040  EF24  F000         	goto	i2u2_40
   518  000044                     i2u2_41:
   519  000044  EF37  F000         	goto	i2l828
   520  000048                     i2u2_40:
   521  000048                     
   522                           ;main.c: 130:             setDisplay(dispToggle++);
   523  000048  5011               	movf	_dispToggle^0,w,c
   524  00004A  ECDB  F000         	call	_setDisplay
   525  00004E  2A11               	incf	_dispToggle^0,f,c
   526  000050                     
   527                           ;main.c: 131:             if(dispToggle == 5){
   528  000050  0E05               	movlw	5
   529  000052  1811               	xorwf	_dispToggle^0,w,c
   530  000054  A4D8               	btfss	status,2,c
   531  000056  EF2F  F000         	goto	i2u3_41
   532  00005A  EF31  F000         	goto	i2u3_40
   533  00005E                     i2u3_41:
   534  00005E  EF33  F000         	goto	i2l66
   535  000062                     i2u3_40:
   536  000062                     
   537                           ;main.c: 132:                 dispToggle = 1;
   538  000062  0E01               	movlw	1
   539  000064  6E11               	movwf	_dispToggle^0,c
   540  000066                     i2l66:
   541                           
   542                           ;main.c: 134:             toggleCounter = 0;
   543  000066  0E00               	movlw	0
   544  000068  6E13               	movwf	(_toggleCounter+1)^0,c
   545  00006A  0E00               	movlw	0
   546  00006C  6E12               	movwf	_toggleCounter^0,c
   547  00006E                     i2l828:
   548                           
   549                           ;main.c: 136:         if(tmrCounter1 == 1000){
   550  00006E  0EE8               	movlw	232
   551  000070  1818               	xorwf	_tmrCounter1^0,w,c
   552  000072  E107               	bnz	i2u4_41
   553  000074  0E03               	movlw	3
   554  000076  1819               	xorwf	(_tmrCounter1+1)^0,w,c
   555  000078  A4D8               	btfss	status,2,c
   556  00007A  EF41  F000         	goto	i2u4_41
   557  00007E  EF43  F000         	goto	i2u4_40
   558  000082                     i2u4_41:
   559  000082  EF53  F000         	goto	i2l836
   560  000086                     i2u4_40:
   561  000086                     
   562                           ;main.c: 137:             ++unitCounter;
   563  000086  2A1C               	incf	_unitCounter^0,f,c
   564  000088                     
   565                           ;main.c: 138:             if(unitCounter == 10){
   566  000088  0E0A               	movlw	10
   567  00008A  181C               	xorwf	_unitCounter^0,w,c
   568  00008C  A4D8               	btfss	status,2,c
   569  00008E  EF4B  F000         	goto	i2u5_41
   570  000092  EF4D  F000         	goto	i2u5_40
   571  000096                     i2u5_41:
   572  000096  EF4F  F000         	goto	i2l68
   573  00009A                     i2u5_40:
   574  00009A                     
   575                           ;main.c: 139:                 unitCounter = 0;
   576  00009A  0E00               	movlw	0
   577  00009C  6E1C               	movwf	_unitCounter^0,c
   578  00009E                     i2l68:
   579                           
   580                           ;main.c: 141:             tmrCounter1 = 0;
   581  00009E  0E00               	movlw	0
   582  0000A0  6E19               	movwf	(_tmrCounter1+1)^0,c
   583  0000A2  0E00               	movlw	0
   584  0000A4  6E18               	movwf	_tmrCounter1^0,c
   585  0000A6                     i2l836:
   586                           
   587                           ;main.c: 143:         if(tmrCounter2 == 10000){
   588  0000A6  0E10               	movlw	16
   589  0000A8  1816               	xorwf	_tmrCounter2^0,w,c
   590  0000AA  E107               	bnz	i2u6_41
   591  0000AC  0E27               	movlw	39
   592  0000AE  1817               	xorwf	(_tmrCounter2+1)^0,w,c
   593  0000B0  A4D8               	btfss	status,2,c
   594  0000B2  EF5D  F000         	goto	i2u6_41
   595  0000B6  EF5F  F000         	goto	i2u6_40
   596  0000BA                     i2u6_41:
   597  0000BA  EF6F  F000         	goto	i2l844
   598  0000BE                     i2u6_40:
   599  0000BE                     
   600                           ;main.c: 144:             ++decCounter;
   601  0000BE  2A1B               	incf	_decCounter^0,f,c
   602  0000C0                     
   603                           ;main.c: 145:             if(decCounter == 6){
   604  0000C0  0E06               	movlw	6
   605  0000C2  181B               	xorwf	_decCounter^0,w,c
   606  0000C4  A4D8               	btfss	status,2,c
   607  0000C6  EF67  F000         	goto	i2u7_41
   608  0000CA  EF69  F000         	goto	i2u7_40
   609  0000CE                     i2u7_41:
   610  0000CE  EF6B  F000         	goto	i2l70
   611  0000D2                     i2u7_40:
   612  0000D2                     
   613                           ;main.c: 146:                 decCounter = 0;
   614  0000D2  0E00               	movlw	0
   615  0000D4  6E1B               	movwf	_decCounter^0,c
   616  0000D6                     i2l70:
   617                           
   618                           ;main.c: 148:             tmrCounter2 = 0;
   619  0000D6  0E00               	movlw	0
   620  0000D8  6E17               	movwf	(_tmrCounter2+1)^0,c
   621  0000DA  0E00               	movlw	0
   622  0000DC  6E16               	movwf	_tmrCounter2^0,c
   623  0000DE                     i2l844:
   624                           
   625                           ;main.c: 150:         if(tmrCounter3 == 60000){
   626  0000DE  0E60               	movlw	96
   627  0000E0  1814               	xorwf	_tmrCounter3^0,w,c
   628  0000E2  E107               	bnz	i2u8_41
   629  0000E4  0EEA               	movlw	234
   630  0000E6  1815               	xorwf	(_tmrCounter3+1)^0,w,c
   631  0000E8  A4D8               	btfss	status,2,c
   632  0000EA  EF79  F000         	goto	i2u8_41
   633  0000EE  EF7B  F000         	goto	i2u8_40
   634  0000F2                     i2u8_41:
   635  0000F2  EF8B  F000         	goto	i2l852
   636  0000F6                     i2u8_40:
   637  0000F6                     
   638                           ;main.c: 151:             ++minCounter;
   639  0000F6  2A1A               	incf	_minCounter^0,f,c
   640  0000F8                     
   641                           ;main.c: 152:             if(minCounter == 10){
   642  0000F8  0E0A               	movlw	10
   643  0000FA  181A               	xorwf	_minCounter^0,w,c
   644  0000FC  A4D8               	btfss	status,2,c
   645  0000FE  EF83  F000         	goto	i2u9_41
   646  000102  EF85  F000         	goto	i2u9_40
   647  000106                     i2u9_41:
   648  000106  EF87  F000         	goto	i2l72
   649  00010A                     i2u9_40:
   650  00010A                     
   651                           ;main.c: 153:                 minCounter = 0;
   652  00010A  0E00               	movlw	0
   653  00010C  6E1A               	movwf	_minCounter^0,c
   654  00010E                     i2l72:
   655                           
   656                           ;main.c: 155:             tmrCounter3 = 0;
   657  00010E  0E00               	movlw	0
   658  000110  6E15               	movwf	(_tmrCounter3+1)^0,c
   659  000112  0E00               	movlw	0
   660  000114  6E14               	movwf	_tmrCounter3^0,c
   661  000116                     i2l852:
   662                           
   663                           ;main.c: 158:   TMR0H = 0xFF;
   664  000116  68D7               	setf	215,c	;volatile
   665                           
   666                           ;main.c: 159:   TMR0L = 0x05;
   667  000118  0E05               	movlw	5
   668  00011A  6ED6               	movwf	214,c	;volatile
   669  00011C                     i2l73:
   670  00011C  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   671  00011E  0011               	retfie		f
   672  000120                     __end_of_intTimer:
   673                           	callstack 0
   674                           
   675 ;; *************** function _setDisplay *****************
   676 ;; Defined at:
   677 ;;		line 41 in file "main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  dispNum         1    wreg     unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  dispNum         1    2[COMRAM] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   691 ;;      Params:         0       0       0       0       0       0       0       0       0
   692 ;;      Locals:         1       0       0       0       0       0       0       0       0
   693 ;;      Temps:          2       0       0       0       0       0       0       0       0
   694 ;;      Totals:         3       0       0       0       0       0       0       0       0
   695 ;;Total ram usage:        3 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_intTimer
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text3
   705  0001B6                     __ptext3:
   706                           	callstack 0
   707  0001B6                     _setDisplay:
   708                           	callstack 28
   709                           
   710                           ;incstack = 0
   711                           ;setDisplay@dispNum stored from wreg
   712  0001B6  6E1F               	movwf	setDisplay@dispNum^0,c
   713  0001B8                     
   714                           ;main.c: 42:     switch(dispNum){
   715  0001B8  EFF6  F000         	goto	i2l768
   716  0001BC                     i2l50:
   717                           
   718                           ;main.c: 44:             LATEbits.LE2 = 0;
   719  0001BC  948D               	bcf	141,2,c	;volatile
   720                           
   721                           ;main.c: 45:             LATEbits.LE0 = 1;
   722  0001BE  808D               	bsf	141,0,c	;volatile
   723                           
   724                           ;main.c: 46:             LATAbits.LA2 = 1;
   725  0001C0  8489               	bsf	137,2,c	;volatile
   726                           
   727                           ;main.c: 47:             LATAbits.LA5 = 1;
   728  0001C2  8A89               	bsf	137,5,c	;volatile
   729                           
   730                           ;main.c: 49:             break;
   731  0001C4  EF13  F001         	goto	i2l56
   732  0001C8                     i2l52:
   733                           
   734                           ;main.c: 51:             LATEbits.LE2 = 1;
   735  0001C8  848D               	bsf	141,2,c	;volatile
   736                           
   737                           ;main.c: 52:             LATEbits.LE0 = 0;
   738  0001CA  908D               	bcf	141,0,c	;volatile
   739                           
   740                           ;main.c: 53:             LATAbits.LA2 = 1;
   741  0001CC  8489               	bsf	137,2,c	;volatile
   742                           
   743                           ;main.c: 54:             LATAbits.LA5 = 1;
   744  0001CE  8A89               	bsf	137,5,c	;volatile
   745                           
   746                           ;main.c: 56:             break;
   747  0001D0  EF13  F001         	goto	i2l56
   748  0001D4                     i2l53:
   749                           
   750                           ;main.c: 58:             LATEbits.LE2 = 1;
   751  0001D4  848D               	bsf	141,2,c	;volatile
   752                           
   753                           ;main.c: 59:             LATEbits.LE0 = 1;
   754  0001D6  808D               	bsf	141,0,c	;volatile
   755                           
   756                           ;main.c: 60:             LATAbits.LA2 = 0;
   757  0001D8  9489               	bcf	137,2,c	;volatile
   758                           
   759                           ;main.c: 61:             LATAbits.LA5 = 1;
   760  0001DA  8A89               	bsf	137,5,c	;volatile
   761                           
   762                           ;main.c: 63:             break;
   763  0001DC  EF13  F001         	goto	i2l56
   764  0001E0                     i2l54:
   765                           
   766                           ;main.c: 65:             LATEbits.LE2 = 1;
   767  0001E0  848D               	bsf	141,2,c	;volatile
   768                           
   769                           ;main.c: 66:             LATEbits.LE0 = 1;
   770  0001E2  808D               	bsf	141,0,c	;volatile
   771                           
   772                           ;main.c: 67:             LATAbits.LA2 = 1;
   773  0001E4  8489               	bsf	137,2,c	;volatile
   774                           
   775                           ;main.c: 68:             LATAbits.LA5 = 0;
   776  0001E6  9A89               	bcf	137,5,c	;volatile
   777                           
   778                           ;main.c: 70:             break;
   779  0001E8  EF13  F001         	goto	i2l56
   780  0001EC                     i2l768:
   781  0001EC  501F               	movf	setDisplay@dispNum^0,w,c
   782  0001EE  6E1D               	movwf	??_setDisplay^0,c
   783  0001F0  6A1E               	clrf	(??_setDisplay+1)^0,c
   784                           
   785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   786                           ; Switch size 1, requested type "simple"
   787                           ; Number of cases is 1, Range of values is 0 to 0
   788                           ; switch strategies available:
   789                           ; Name         Instructions Cycles
   790                           ; simple_byte            4     3 (average)
   791                           ;	Chosen strategy is simple_byte
   792  0001F2  501E               	movf	(??_setDisplay+1)^0,w,c
   793  0001F4  0A00               	xorlw	0	; case 0
   794  0001F6  B4D8               	btfsc	status,2,c
   795  0001F8  EF00  F001         	goto	i2l876
   796  0001FC  EF13  F001         	goto	i2l56
   797  000200                     i2l876:
   798                           
   799                           ; Switch size 1, requested type "simple"
   800                           ; Number of cases is 4, Range of values is 1 to 4
   801                           ; switch strategies available:
   802                           ; Name         Instructions Cycles
   803                           ; simple_byte           13     7 (average)
   804                           ;	Chosen strategy is simple_byte
   805  000200  501D               	movf	??_setDisplay^0,w,c
   806  000202  0A01               	xorlw	1	; case 1
   807  000204  B4D8               	btfsc	status,2,c
   808  000206  EFDE  F000         	goto	i2l50
   809  00020A  0A03               	xorlw	3	; case 2
   810  00020C  B4D8               	btfsc	status,2,c
   811  00020E  EFE4  F000         	goto	i2l52
   812  000212  0A01               	xorlw	1	; case 3
   813  000214  B4D8               	btfsc	status,2,c
   814  000216  EFEA  F000         	goto	i2l53
   815  00021A  0A07               	xorlw	7	; case 4
   816  00021C  B4D8               	btfsc	status,2,c
   817  00021E  EFF0  F000         	goto	i2l54
   818  000222  EF13  F001         	goto	i2l56
   819  000226                     i2l56:
   820  000226  0012               	return		;funcret
   821  000228                     __end_of_setDisplay:
   822                           	callstack 0
   823  0000                     
   824                           	psect	rparam
   825  0000                     
   826                           	psect	temp
   827  000020                     btemp:
   828                           	callstack 0
   829  000020                     	ds	1
   830  0000                     int$flags	set	btemp
   831  0000                     wtemp8	set	btemp+1
   832  0000                     ttemp5	set	btemp+1
   833  0000                     ttemp6	set	btemp+4
   834  0000                     ttemp7	set	btemp+8
   835                           
   836                           	psect	idloc
   837                           
   838                           ;Config register IDLOC0 @ 0x200000
   839                           ;	unspecified, using default values
   840  200000                     	org	2097152
   841  200000  FF                 	db	255
   842                           
   843                           ;Config register IDLOC1 @ 0x200001
   844                           ;	unspecified, using default values
   845  200001                     	org	2097153
   846  200001  FF                 	db	255
   847                           
   848                           ;Config register IDLOC2 @ 0x200002
   849                           ;	unspecified, using default values
   850  200002                     	org	2097154
   851  200002  FF                 	db	255
   852                           
   853                           ;Config register IDLOC3 @ 0x200003
   854                           ;	unspecified, using default values
   855  200003                     	org	2097155
   856  200003  FF                 	db	255
   857                           
   858                           ;Config register IDLOC4 @ 0x200004
   859                           ;	unspecified, using default values
   860  200004                     	org	2097156
   861  200004  FF                 	db	255
   862                           
   863                           ;Config register IDLOC5 @ 0x200005
   864                           ;	unspecified, using default values
   865  200005                     	org	2097157
   866  200005  FF                 	db	255
   867                           
   868                           ;Config register IDLOC6 @ 0x200006
   869                           ;	unspecified, using default values
   870  200006                     	org	2097158
   871  200006  FF                 	db	255
   872                           
   873                           ;Config register IDLOC7 @ 0x200007
   874                           ;	unspecified, using default values
   875  200007                     	org	2097159
   876  200007  FF                 	db	255
   877                           
   878                           	psect	config
   879                           
   880                           ;Config register CONFIG1L @ 0x300000
   881                           ;	PLL Prescaler Selection bits
   882                           ;	PLLDIV = 0x0, unprogrammed default
   883                           ;	System Clock Postscaler Selection bits
   884                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   885                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   886                           ;	USBDIV = 0x0, unprogrammed default
   887  300000                     	org	3145728
   888  300000  00                 	db	0
   889                           
   890                           ;Config register CONFIG1H @ 0x300001
   891                           ;	Oscillator Selection bits
   892                           ;	FOSC = HS, HS oscillator (HS)
   893                           ;	Fail-Safe Clock Monitor Enable bit
   894                           ;	FCMEN = 0x0, unprogrammed default
   895                           ;	Internal/External Oscillator Switchover bit
   896                           ;	IESO = 0x0, unprogrammed default
   897  300001                     	org	3145729
   898  300001  0C                 	db	12
   899                           
   900                           ;Config register CONFIG2L @ 0x300002
   901                           ;	Power-up Timer Enable bit
   902                           ;	PWRT = ON, PWRT enabled
   903                           ;	Brown-out Reset Enable bits
   904                           ;	BOR = 0x3, unprogrammed default
   905                           ;	Brown-out Reset Voltage bits
   906                           ;	BORV = 0x3, unprogrammed default
   907                           ;	USB Voltage Regulator Enable bit
   908                           ;	VREGEN = 0x0, unprogrammed default
   909  300002                     	org	3145730
   910  300002  1E                 	db	30
   911                           
   912                           ;Config register CONFIG2H @ 0x300003
   913                           ;	Watchdog Timer Enable bit
   914                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   915                           ;	Watchdog Timer Postscale Select bits
   916                           ;	WDTPS = 0xF, unprogrammed default
   917  300003                     	org	3145731
   918  300003  1E                 	db	30
   919                           
   920                           ; Padding undefined space
   921  300004                     	org	3145732
   922  300004  FF                 	db	255
   923                           
   924                           ;Config register CONFIG3H @ 0x300005
   925                           ;	CCP2 MUX bit
   926                           ;	CCP2MX = 0x1, unprogrammed default
   927                           ;	PORTB A/D Enable bit
   928                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   929                           ;	Low-Power Timer 1 Oscillator Enable bit
   930                           ;	LPT1OSC = 0x0, unprogrammed default
   931                           ;	MCLR Pin Enable bit
   932                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   933  300005                     	org	3145733
   934  300005  01                 	db	1
   935                           
   936                           ;Config register CONFIG4L @ 0x300006
   937                           ;	Stack Full/Underflow Reset Enable bit
   938                           ;	STVREN = 0x1, unprogrammed default
   939                           ;	Single-Supply ICSP Enable bit
   940                           ;	LVP = OFF, Single-Supply ICSP disabled
   941                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   942                           ;	ICPRT = 0x0, unprogrammed default
   943                           ;	Extended Instruction Set Enable bit
   944                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   945                           ;	Background Debugger Enable bit
   946                           ;	DEBUG = 0x1, unprogrammed default
   947  300006                     	org	3145734
   948  300006  81                 	db	129
   949                           
   950                           ; Padding undefined space
   951  300007                     	org	3145735
   952  300007  FF                 	db	255
   953                           
   954                           ;Config register CONFIG5L @ 0x300008
   955                           ;	unspecified, using default values
   956                           ;	Code Protection bit
   957                           ;	CP0 = 0x1, unprogrammed default
   958                           ;	Code Protection bit
   959                           ;	CP1 = 0x1, unprogrammed default
   960                           ;	Code Protection bit
   961                           ;	CP2 = 0x1, unprogrammed default
   962                           ;	Code Protection bit
   963                           ;	CP3 = 0x1, unprogrammed default
   964  300008                     	org	3145736
   965  300008  0F                 	db	15
   966                           
   967                           ;Config register CONFIG5H @ 0x300009
   968                           ;	unspecified, using default values
   969                           ;	Boot Block Code Protection bit
   970                           ;	CPB = 0x1, unprogrammed default
   971                           ;	Data EEPROM Code Protection bit
   972                           ;	CPD = 0x1, unprogrammed default
   973  300009                     	org	3145737
   974  300009  C0                 	db	192
   975                           
   976                           ;Config register CONFIG6L @ 0x30000A
   977                           ;	unspecified, using default values
   978                           ;	Write Protection bit
   979                           ;	WRT0 = 0x1, unprogrammed default
   980                           ;	Write Protection bit
   981                           ;	WRT1 = 0x1, unprogrammed default
   982                           ;	Write Protection bit
   983                           ;	WRT2 = 0x1, unprogrammed default
   984                           ;	Write Protection bit
   985                           ;	WRT3 = 0x1, unprogrammed default
   986  30000A                     	org	3145738
   987  30000A  0F                 	db	15
   988                           
   989                           ;Config register CONFIG6H @ 0x30000B
   990                           ;	unspecified, using default values
   991                           ;	Configuration Register Write Protection bit
   992                           ;	WRTC = 0x1, unprogrammed default
   993                           ;	Boot Block Write Protection bit
   994                           ;	WRTB = 0x1, unprogrammed default
   995                           ;	Data EEPROM Write Protection bit
   996                           ;	WRTD = 0x1, unprogrammed default
   997  30000B                     	org	3145739
   998  30000B  E0                 	db	224
   999                           
  1000                           ;Config register CONFIG7L @ 0x30000C
  1001                           ;	unspecified, using default values
  1002                           ;	Table Read Protection bit
  1003                           ;	EBTR0 = 0x1, unprogrammed default
  1004                           ;	Table Read Protection bit
  1005                           ;	EBTR1 = 0x1, unprogrammed default
  1006                           ;	Table Read Protection bit
  1007                           ;	EBTR2 = 0x1, unprogrammed default
  1008                           ;	Table Read Protection bit
  1009                           ;	EBTR3 = 0x1, unprogrammed default
  1010  30000C                     	org	3145740
  1011  30000C  0F                 	db	15
  1012                           
  1013                           ;Config register CONFIG7H @ 0x30000D
  1014                           ;	unspecified, using default values
  1015                           ;	Boot Block Table Read Protection bit
  1016                           ;	EBTRB = 0x1, unprogrammed default
  1017  30000D                     	org	3145741
  1018  30000D  40                 	db	64
  1019                           tosu	equ	0xFFF
  1020                           tosh	equ	0xFFE
  1021                           tosl	equ	0xFFD
  1022                           stkptr	equ	0xFFC
  1023                           pclatu	equ	0xFFB
  1024                           pclath	equ	0xFFA
  1025                           pcl	equ	0xFF9
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           prodh	equ	0xFF4
  1031                           prodl	equ	0xFF3
  1032                           indf0	equ	0xFEF
  1033                           postinc0	equ	0xFEE
  1034                           postdec0	equ	0xFED
  1035                           preinc0	equ	0xFEC
  1036                           plusw0	equ	0xFEB
  1037                           fsr0h	equ	0xFEA
  1038                           fsr0l	equ	0xFE9
  1039                           wreg	equ	0xFE8
  1040                           indf1	equ	0xFE7
  1041                           postinc1	equ	0xFE6
  1042                           postdec1	equ	0xFE5
  1043                           preinc1	equ	0xFE4
  1044                           plusw1	equ	0xFE3
  1045                           fsr1h	equ	0xFE2
  1046                           fsr1l	equ	0xFE1
  1047                           bsr	equ	0xFE0
  1048                           indf2	equ	0xFDF
  1049                           postinc2	equ	0xFDE
  1050                           postdec2	equ	0xFDD
  1051                           preinc2	equ	0xFDC
  1052                           plusw2	equ	0xFDB
  1053                           fsr2h	equ	0xFDA
  1054                           fsr2l	equ	0xFD9
  1055                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3      31
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _intTimer in COMRAM

    _intTimer->_setDisplay

Critical Paths under _main in BANK0

    None.

Critical Paths under _intTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _intTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _intTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _intTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _intTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _intTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _intTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _intTimer in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _intTimer                                             0     0      0      15
                         _setDisplay
 ---------------------------------------------------------------------------------
 (3) _setDisplay                                           3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _intTimer (ROOT)
   _setDisplay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      3      1F       1       33.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1F      20        0.0%
DATA                 0      0      1F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Feb 16 00:05:27 2022

            _unitCounter 001C                       l80 01AE                       l59 0268  
                    l800 0258                      l810 0266                      l802 025A  
                    l804 025C                      l806 0262                      l808 0264  
                    l780 0244                      l860 0148                      l790 024E  
                    l782 0246                      l774 0228                      l870 019A  
                    l862 015A                      l854 0120                      l792 0250  
                    l784 0248                      l776 0240                      l864 0162  
                    l856 0124                      l794 0252                      l786 024A  
                    l778 0242                      l866 0174                      l858 0134  
                    l796 0254                      l788 024C                      l868 0188  
                    l798 0256                      u100 0134                      u101 0130  
                    u110 015A                      u111 0156                      u120 0174  
                    u121 0170                      u130 019A                      u131 0196  
                    wreg 000FE8                     _LATD 000F8C                     i2l50 01BC  
                   i2l52 01C8                     i2l53 01D4                     i2l54 01E0  
                   i2l70 00D6                     i2l56 0226                     i2l72 010E  
                   i2l73 011C                     i2l66 0066                     i2l68 009E  
                   _main 0120                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0020                     start 000E  
           ___param_bank 000000                    ?_main 001D                    i2l820 0048  
                  i2l812 0014                    i2l830 0086                    i2l822 004E  
                  i2l814 0022                    i2l840 00C0                    i2l832 0088  
                  i2l824 0050                    i2l816 0024                    i2l850 010A  
                  i2l842 00D2                    i2l834 009A                    i2l826 0062  
                  i2l818 0034                    i2l764 01B8                    i2l852 0116  
                  i2l844 00DE                    i2l836 00A6                    i2l828 006E  
                  i2l846 00F6                    i2l838 00BE                    i2l768 01EC  
                  i2l848 00F8                    i2l876 0200                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISD 000F95                    _TRISE 000F96                    _setup 0228  
                  tablat 000FF5                    ttemp5 0021                    ttemp6 0024  
                  ttemp7 0028                    status 000FD8                    wtemp8 0021  
        __initialization 026A             __end_of_main 01B6                   ??_main 0020  
          __activetblptr 000002        setDisplay@dispNum 001F                   _ADCON1 000FC1  
                 ?_setup 001D                   i2u1_40 0022                   i2u1_41 001E  
                 i2u2_40 0048                   i2u2_41 0044                   i2u3_40 0062  
                 i2u3_41 005E                   i2u4_40 0086                   i2u4_41 0082  
                 i2u5_40 009A                   i2u5_41 0096                   i2u6_40 00BE  
                 i2u6_41 00BA                   i2u7_40 00D2                   i2u7_41 00CE  
                 i2u8_40 00F6                   i2u8_41 00F2                   i2u9_40 010A  
                 i2u9_41 0106         __end_of_intTimer 0120                   clear_0 0290  
                 isa$std 000001             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0296            ___rparam_used 000001           __pcstackCOMRAM 001D  
          __end_of_setup 026A               _decCounter 001B                  ??_setup 0020  
             _dispToggle 0011                ?_intTimer 001D                  __Hparam 0000  
             _minCounter 001A                  __Lparam 0000                  __pcinit 026A  
                __ramtop 0800                  __ptext0 0120                  __ptext1 0228  
                __ptext3 01B6                _T0CONbits 000FD5                  _numbers 0001  
             _setDisplay 01B6           __pintcode_body 0012     end_of_initialization 0296  
             ??_intTimer 0020            __Lmediumconst 0000                  int_func 0012  
                postdec1 000FE5                  postinc0 000FEE                _PORTAbits 000F80  
              _PORTEbits 000F84            __pidataCOMRAM 02A4      start_initialization 026A  
            ?_setDisplay 001D              __pbssCOMRAM 0012        __size_of_intTimer 0118  
              __pintcode 0008      __size_of_setDisplay 0072           __size_of_setup 0042  
               _LATAbits 000F89                 _LATEbits 000F8D                copy_data0 027E  
               __Hrparam 0000                 __Lrparam 0000             ??_setDisplay 001D  
               _intTimer 0008            __size_of_main 0096                 isa$xinst 000000  
               int$flags 0020       __end_of_setDisplay 0228               _INTCONbits 000FF2  
               intlevel2 0000            _toggleCounter 0012              _tmrCounter1 0018  
            _tmrCounter2 0016              _tmrCounter3 0014  
